apiVersion: v1
kind: Service
metadata:
  name: postgres-external
  namespace: test
spec:
  type: ClusterIP
  selector:
    app: external-db
  ports:
    - port: 5432
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: ssl-postgres-conf-sh
  namespace: test
  labels:
    app: noobaa
data:
  sslconf.sh: |
    #!/bin/bash
    # echo ssl setting into pg_hba.conf configuration file
    echo 'local all all trust' > /var/lib/postgresql/data/pg_hba.conf
    echo 'hostssl all all all cert clientcert=verify-full' >> /var/lib/postgresql/data/pg_hba.conf
---
apiVersion: v1
kind: Pod
metadata:
  labels:
    app: external-db
  name: postgres-external
  namespace: test
spec:
  initContainers:
    - name: volume-mount-hack
      image: postgres:15
      command: ["sh", "-c", "cp /etc/ssl/server.key /etc/private/server.key && chown root:ssl-cert /etc/private/server.key"]
      volumeMounts:
        - name: postgres-ssl
          mountPath: /etc/ssl
        - name: key-volume
          mountPath: /etc/private
  containers:
    - name: external-db-ssl
      image: postgres:15
      args: 
        - -c 
        - ssl=on
        - -c 
        - ssl_cert_file=/etc/ssl/server.crt
        - -c
        - ssl_key_file=/etc/private/server.key
        - -c
        - ssl_ca_file=/etc/ssl/ca.crt
      imagePullPolicy: IfNotPresent
      resources:
        # https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
        # requests:
        #   cpu: 100m
        #   memory: 500Mi
        # limits:
        #   cpu: 100m
        #   memory: 500Mi
        requests:
          cpu: 1000m
          memory: 2Gi
        limits:
          cpu: 1000m
          memory: 2Gi
      env:
        - name: POSTGRES_PASSWORD
          value: noobaa
        - name: LC_COLLATE
          value: C
      ports:
        - containerPort: 5432
      volumeMounts:
        - name: postgres-ssl
          mountPath: /etc/ssl
        - name: key-volume
          mountPath: /etc/private
        - name: ssl-postgres-conf-sh-volume
          mountPath: /docker-entrypoint-initdb.d
  volumes:
    - name: key-volume
      emptyDir: {}
    - name: ssl-postgres-conf-sh-volume
      configMap:
        name: ssl-postgres-conf-sh
        items:
        - key: sslconf.sh
          path: sslconf.sh
    - name: postgres-ssl 
      secret:
        secretName: postgres-ssl
        defaultMode: 0600
        items:
        - key: server.key
          path: server.key
          mode: 0640
        - key: server.crt
          path: server.crt
          mode: 0777
        - key: ca.crt
          path: ca.crt
          mode: 0777
