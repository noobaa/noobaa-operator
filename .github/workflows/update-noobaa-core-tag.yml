name: Update Noobaa-Core container image tag

on:
  schedule:
    - cron: '0 0 1 * *'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  actions: write

jobs:
  update-tag:
    runs-on: ubuntu-latest
    timeout-minutes: 90
    env:
      GITHUB_TOKEN: ${{ secrets.GHACTION_TOKEN_PR_PERMS }}

    steps:
      - name: Checkout master
        uses: actions/checkout@v4
        with:
          ref: master

      - name: Generate container image tag
        id: generate_tag
        run: |
          tag="master-$(date -d 'yesterday' +%Y%m%d)" # using yesterday's date to ensure the image is available
          echo "Generated tag: $tag"
          echo "container_image_tag=$tag" >> "$GITHUB_OUTPUT"

      - name: Replace ContainerImageTag
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: 'ContainerImageTag = "[^"]*"'
          replace: 'ContainerImageTag = "${{ steps.generate_tag.outputs.container_image_tag }}"'
          include: 'pkg/options/options.go'
          regex: true

      - name: Check for changes
        run: |
          if git diff --quiet pkg/options/options.go; then
            echo "Noobaa Core image tag is already up to date"
            echo "No changes needed - canceling workflow"
            gh run cancel ${{ github.run_id }}
          fi

      - name: Commit and Push changes
        run: |
          git config --global user.email "github-action@noobaa.io"
          git config --global user.name "NooBaa GitHub Action"
          git checkout -B update-core-tag-${{ steps.generate_tag.outputs.container_image_tag }}
          git add pkg/options/options.go
          git commit -s -m "chore: update noobaa-core image tag to ${{ steps.generate_tag.outputs.container_image_tag }}"
          git push origin update-core-tag-${{ steps.generate_tag.outputs.container_image_tag }}

      - name: Create Pull Request
        id: create_pr
        run: |
          PR_URL=$(gh pr create \
            --title "Update ContainerImageTag to ${{ steps.generate_tag.outputs.container_image_tag }}" \
            --body "Automated update of ContainerImageTag to ${{ steps.generate_tag.outputs.container_image_tag }} in options.go" \
            --head update-core-tag-${{ steps.generate_tag.outputs.container_image_tag }} \
            --base master)
          echo "PR created: $PR_URL"
          echo "pr_url=$PR_URL" >> "$GITHUB_OUTPUT"

      - name: Wait for PR checks and merge
        run: |
          echo "Waiting for checks to pass on: ${{ steps.create_pr.outputs.pr_url }}"
          echo "Waiting 60 seconds for checks to start..."
          sleep 60

          echo "Checking PR status..."
          gh pr checks "${{ steps.create_pr.outputs.pr_url }}" --watch

          echo "Rebasing and merging PR..."
          gh pr merge "${{ steps.create_pr.outputs.pr_url }}" --rebase --admin --delete-branch

      - name: Cleanup branch on failure
        if: always()
        run: |
          branch_name="update-core-tag-${{ steps.generate_tag.outputs.container_image_tag }}"
          if git ls-remote --heads origin "$branch_name" | grep -q "$branch_name"; then
            echo "Branch $branch_name still exists, deleting..."
            git push origin --delete "$branch_name"
          fi
